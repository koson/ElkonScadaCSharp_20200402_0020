<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANwAAABQCAYAAAByKBsiAAAABGdBTUEAALGPC/xhBQAAG8JJREFUeF7t
        3Xd4FNX6B/BBAghI8yodRKUpKGLBXq5ce7lYUFAR671WuIrIvQr2RvWiYOiYQAiSvgkJ6Zu26dlNSOgt
        vWwK9f7+/b3fmT07Z2dndgdINOrZ5/k8SWZnd2fOvN9zzswurHSOty4GLhCEPyC9WocOu+m9GL9BXV0C
        ON10dBeETkivVvlaZvXN17xeJs77pn1CvYD1JAPIIDKEDOMM1xghCJ0QX6Oo24GkH0FtX0h6cFhA+QBq
        c3LWN/7BLGB4kUlS166B0siRRdK0aYek99+vlBYvrpR++KFSCgyslNasqTKA+xRr1/pyTBA6iF69qfga
        /fHHSmnJkipp/vwq6dlnj0qjR1dQ3edQ/YeS2eQvpBdhYWSjoDZ8fm/8yixoeLIB0oUXfinde+8xaeXK
        Smnjxkppw4YqTrW0fr0CvzNsGY+/3/M5BOHXptaiXq0Cu3/Nmmpp+vRK6aKLHJSHCHK9nAtJ6ksQvnMK
        Hh82PBjDZx9p8uSV0ldfHfEIGtugdetq6GetbN26OuotPGEZsHXUdWvc1q834t0AgmCeXk3xdedZk0pd
        KvXK6lddjp810tKlNdK4cUcoFxjtbiSDycVyTpQpKDKD7PCh072xoLGwIbEXSyNGfCQtX77fnXS2sdiY
        NWvqZWvXNsgCAxshYO3axlFbtzrvt1haX0tLO/FeVtbJD222kwtyc0/Oy84+OScz88Q/rdbjs9PS2mYk
        J7c+npDQ+kBsbMs9MTHNt0ZFNd8YFuacuGOHc+y2bU2jQkIah23Z0jg4OLjxks2bG/pv2tTQZ+PGhp7r
        19dfSHqQgHXr6i9Yu7a+C3Fvk/DH5jreOO44/t1JD4KaQG303rChvs/mzfWol4upbvrSz95UN1hXfnxg
        oFKzetasaXTzXI7XrZNWraqTJk48QPn4kIwmOA9k5329CRvtWJ68QseSyMKGlGKYvEP6+GOLtGnTMS5s
        tfKL8hv3009NLs7JO3a0fZGff3pZScmZZcXF/4PlHHm53W5ouQ+u+09r0XLZUiguPr2EfFdUdPrbwsLT
        X5EvCgpOf07b9BlZmJt76kMK/dzMzJNvWq0nXk1NPTErJeX4c0lJx6cnJbVNS0hoezgurnUqdRZ3RUe3
        3BoZ2XxDWFjzxF9+cY4NDXVeFhLSNHzLlqYh1AlcGhTU+BfSjw4oDmavDRsaLiTUCeDANlAxqAfLLBRC
        e9J7DT+okBu60vZ3o/3AvvSkfepF+4d97Pfzz/I+X0IGkaHBwXJ7XEHtMm77difaaTK1183UbndQ+1En
        2kKdaeujO3e2om2foTaemZx8/AVq85dTUk6gQ8ZxmGO1nvyAOuZ/22ynPqFjhGOFY4Zjh2P4NcExXUxw
        fOVjzY49/S2j3z3qArXmslSpO7k+vi4qOvUcbQN13EqoMFCoNSzXMUddjvVYO82dWyv16bODMoJR7ioy
        iuDCIaaZCJ3PkY4t4MM2QBoy5Ek6gUzlwqYGTd2wZmn16hZKfcuUsLDjS4qK/m8ZFBeDHDiGD54cPleI
        9FCD/e6sMEHvcYxeO7QHvddi9LbRiN7jOzO9tmCWl5SgJs88YLG0BQQG8gFrdkNd83/zAVy0qFEaNiyN
        cnIvYaG7jGCk60+QIcPQ4RcsxJVIzEMxHx0oDR06gwKXIc9h2aim9gbNCJlLa4/AwNbXUlNPy2EzCJ2v
        sOk1mCC0J23NAc3GzowJCWl1hUkJHILmGkS8sPAtXOikwGVTTh4ndxFcRBlL8NbCJYSd0yFTHoFjv+Dq
        ChvdMBcdQiPc89IPP2RR4BA2Zd6rBM6p2RA5cK+mpJzSBM4rbPyUkjUE9Z6nZQ6H8lMLywXBDL360eDD
        t5hGubujo9uoptmMTQ2dZ42rcP8nnyBwNsrJ0+Q+cguZQC4nmFoiQ2yUQ7Y8AsfO3XCyh/kn5qHDKXCz
        KHDZ8lRSOdFko5sauNWrW5mpUVEnlxYW/p+MAkf+BxQ49xwaaId5pxi6z5vDcWr5eaCDIPyJ6NWAFq2n
        hI9+4pwQF+q4wcTrVMkLli9a1EyBy6OczCQPkTvItQQXUfABEHYux19A0Q3cRQSXOYdLgwe/KK1cmSOP
        bsrVIWV0w8aoL64Ejka5XmvWtL5tteJk939AJ7xnviQ48XWd/J5yKyo6yXxdXHziGwPflpScl+/8sdtl
        i/1YYhJ1Eie9OBxe6MCbQkVxXr4XvFC7uoP3aUHByZEhIU3y6ZLnKZN+6PC3Z+CeJ48QTCuvI2PIUIIM
        IUs+A4d3zjH3xDvpIzwCp2yMuiF84LgNGh4U1PpuRsapj2y20x/l5p5iPs7LO0lOwMLCwuOwiHxSVNRm
        oJX3qYHPoLjYpy80v8PnxcVtPFqmKikx7Usz7HbZVz58fRa+8eFbk6iT8eZweLLbj1NnY8zhcFviw1KT
        lpWWGlp+jqhzO0HhOiH/LC1VIHTUEWL5rLS0lp4bN7L3kFmde4aOBY+nBC6fcjKLPEruJuw8Dh8PQ4aQ
        JWTKVOBGUuBmy4FjVyf1RjgeNoTuv3r79hYK3Yl/ZWaefC87G+/DnXg/J+c4aYMPcnNb59lsrR/k5bW4
        5ec3f6jPqaugwMMCk/6taHYrLNT1H42PzsLHRoqK3BaatMgk6pQUxcVun5pRVNRCnVYLdUZ+UcfU8nlJ
        iV/UEZlGHZJp1DF5oM5H1zcOR6vMbvdA97V+RR0g/ZR9Th37iNBQvKGtfoDD++Kgd+jwu2fgHiP3EARu
        HMGFkw4MHL8hyv1Nl23d6nwlLe34mxkZx9/KzGx7KyurVZad3fJ2dnYzvJOT42TetdmaZLm5jXOYvDz1
        d36Zxr/Ow3tMfr6xvLwmPe8z+fm65plEnY2xggJT5vtBnZKnwkIvCwxQB+RkqPM5f8XFzo/8+NikhUZK
        SpyLqEPR6ZxaYEF+fsv4iIhqaeNGvMeMT1CxT6bUyqdPauhQz56h+9UCp6bee4hlG4T7sR6t33fz5vpH
        EhKaZ6emtr5ktTa/nJHhhFcyMppeycpqfDU7u8Gl/jUmJ6f+9ZycOjebzcM/zKl/w0hurtub5yMvr/4t
        LVou0yx/24R3zsK7GtTpNLjl5xuaa9K/zCgo0PWeSe/rmOdPYSE0fmDSfBf8zjq2+WRubm7TdTExVdKm
        TUekzZuPuj7YoXy2EqFjn6JCzaujnBo6UK5S4hzuVwmc0yBsTlpHPQGlx3XdsKHmmoiI+unJyc4ZqalN
        M9PSGmempzfMtFrrZ1itdfBcRkbdc1lZtc9lZtbIsrPdXuDl5OiaZdKLemy2mtkmvGTCy0Zycz28wrPZ
        anmvmvCantxcL6+b9A8D1Cl5y8vziToiN/q7jqG/TXkrP1/X2+fonYICbYfVMMliOdYlKOigFBR0SPr5
        Z8/QKZ/BZOd0+lPL3yRweFH9wCkff0EPoXzgE5/BrOodHFx5W1xczePJyXXT0tJqSc0T6enVMqu16kmX
        pzIzK5/KylLgd/5vl6dNmO7HM5Cd7dezfswwVmVkpgHqYEx5PifHFOqMvFDH45/NVkUdkb6cnGrebH9s
        Nhl1SKq8PNkr7ehVI9SpyahTejYzs3pQWNhBaevWfdKWLful4OCDFLhDFLjDHqHjPyusrfvAQKXOO0Hg
        lGEX6wEeg+EZwzT+lQF2iHasR3Dw4SlxcZUPJCVVP5iSUilLTa18KD392ENpaUdlVuuRR3gZGaY9aiQz
        0+0xkx7PyDiq5+9GMjPdppnwhA9PGsnKcqPOx6+ns7OP6ZluJCfH7RmTZrSTmUZsNtlzHFpeaRZ1PpVT
        U1KO9Ny+fa+0bdseKSRkrxy64OADXOiUwKFW2bmc/lVLxW8WOH50w31YT+kZEDh5dJN3BEM3hnDsIPUu
        PbZt2z/aYjl4e2LikbtTUg7fk5JyyC019eA9aWme0tMP/vUs3euL1Xrwb1q0nHcfj+7Xc78BeswheMCk
        B7WsVtOogzL0sNV6mHkkM9Mn6ozOGXVQ3rKyPDzuxzQfnvAlO1tG6x2hjkxGnZMM7TPMYtkjbd++WxYa
        Wi6HDjxDp0wtlcApVy3ZFUv1A/pq4JSPdv3KgfMMmxo49AzoIdjohsBh2Ma8GTuIHVV6mnI0Qp+wsPJx
        cXH7bkxM3D8lKWn/lJSUfR5SU/fd7MOtftx2nm434Q5v+5k7mbQ0L3eZdLcfd9HzY1+vT0raOyEhoWJU
        XFz5oJiY3RdFRzu6hYfbA8LC7F2IZNIFJIAe1z083NEnKqp0YExM2ci4uN1j6bmvS0raMyU5eS/2iV77
        wF/JVKv1AHVa54Q6Ll3Ucfn0QEaGEbkzHEPbSvtRSjXGlHGhq5BHOmVqeYACd1gOnTKtVK9YKvXMX6Hv
        RIFjF0yU6aQaOPQc2CHX6CbvKAKHHVd6HjREaZcdOxw9IiMdOLhj4uPLqXD2TExM3HMNoZ8VDP3tHxXF
        tX6gcDwkJ3uYfBau13GDSTeq9vJu0sC6k2jfroyP332pxVLaOyrK3i0ysqRLeHiJ9Bu7ICKipHtEhL0n
        bVN/CvnQ2NjSK2g7JyQmlt+QkrKHOoO9t6el7dO6w4c709PPGnXQe/Ha6DDcHQjVFerLRQkdC5wyyu13
        X0Bh53FK6H53gVOmk0rgDtFOYfje7xrdKuQdd4VNbhTWQOxARkQUB9CB7BcTYx8cF+cYGR9fdkVCQtmV
        3nbD6MREFf7WQb2eitbjjTNpvA9XmVPOXK0xPiGhHNt2Oe3r0Pj40v60790pVGiLPwp0En2jo+0DcUzj
        4spwXK6m/Z6YlFROHR9G0IrrU1JU1NF4dWBY7loXbYqQye0UFqa+FqsjFrpffmHBU6eWbJTjL57wgWMX
        TrTTyk4QOPUf6GF9zIG1geOnk+hhWNiADxt3cNwiI4tk4eHyTxoJi/tZLCWXxMXJYRwaF1eqNUwPFbEZ
        w30Y4UtCgmykjlHkMgoSfh+2c6djEG03AtUrOro4ICqqiEYq9/79qVEboC1k9PcF1Dak2I2WudsK+Mdq
        60YbOs9RTg0cTnf4wCnnccaBW7SoqXMEjl0w4QOnXjBRA6dMJ8uo11FHN9Y4rLH4hjQBByKAgtidDkqv
        qKiS3jExJX0plAgm09+F/90DBWAAY7H4dTEFHgYA/U3PYafntuN18fo9KUzYHgRKb5uFDsSHjnXoSujU
        aSVqUTmPw4UTJXDqhRP1SuXvLnDs/E0JXIUrcMrohkY4z7CdK/SgDALLo/C6f2fr6D2H0IlpQ6eOcmrg
        UJOoT3Yeh8BhSqkfOKX+/xCBw/wb9BpOEM6FceDKPAKH6wvegcNbA0rgoFMHTnnTu8p1/oYpJd4SYFco
        2QUTz8CxxtFruMjIQkEwwbNuzidwyucq/0CB056/6QdOr1EFwRe+fpTQscAB6k4ETgROaDd8/YjAicAJ
        HYyvHxE4ETihg/H1IwInAid0ML5+ROBE4IQOxtePCJwInNDB+PoRgROBEzoYXz8icCJwQgfj60cETgRO
        6GB8/YjAicAJHYyvHxE4ETihg/H1IwInAid0ML5+ROBE4IQOxtePCJwInNDB+PoRgROBEzoYXz8icCJw
        Qgfj60cETgRO6GB8/YjAicAJHYyvHxE4ETihg/H1IwInAid0ML5+ROBE4IQOxtePCJwInNDB+PoRgROB
        EzoYXz8icO7A4T/kxDeaiMAJ7Yuvnz9p4LT/1TkLnPifl4X25Vk3rKZY4FBrf8j/efl8vsxD22iCcK6M
        A+f5ZR56geO/zON3FzjsjPp1VUrgQkM9v4zR/ygnCOaxWgI2nWSBCw39A397DqaVnoFTvx8OO8+fx/Gh
        A70v3RMEfzxryHs6qYxw6hcyInB63w+n1HMn/n44rIf1tYFrr29AFQQjenXDOnF/gcNFvd/ZN6D6+47v
        w7RTynd8YyfNfMc3o9eQgqBHWzusptSwKedvISHKd3wr00mz3/Gt1Dl0ii/Vx31YD/NeJXDV8vDMAodh
        G6Oc8tYAehdMK9XQseDt2KE0kmCettD0uNbtEh5uDyDdICICX9rvgJ5RUW69DPTm6N3Pw/P0AHrubkCv
        hde8gGAbwO+2s/07V0o98WErk09nMMNCHSqBUy+YYIBQRrgauYaVeu4kgVu9ukX+qYZOCRw7j8OwjMBh
        JzZtOiL3IhjlsJNK6CoCQkMr+oaHVwyJjt4zKjZ2z5idO/eMi4/fe1VCwt4JkJi4R+tqMi4hYc+YhIQK
        uDI+vmJUXFzFyLi48uGxseWDYmN3XxoTU3ZxdHRZn8jIst4REaU46AFhYY4LSBfiPhCdGG2nHdvbjfSi
        fegTFVU6gPaJ9m33ENrHEbS/I3fuLMe+j6Z2G+1qj7HUNmgfD/Hxpo1l6HFeuPvH6BhtrGI0ttPlSh8u
        J5dh31zHc3BMTPml0dG7+9O+X0RtgGOJdtFrMy980NSpJH+xBNPJA/LoxgKnTCdr3HWv1n4nCJwaOr3A
        KedxCB3tTLegoMOXhoYenhwbe3RqUlLlw6mplQ+lpR0jR2Xp6Ufg4fT0w1q03KcH09MP+fOAznq07NB9
        5G+Kg/eSe1JTD9yWnHzglqSkAzclJu6/nlyXmLhv0q5d+yYmJOwbv3Pn3rEocIJivyw2VjbSYqkYwcHf
        1ImgiOR1x9HjrqLO5Fp6jsm7du2/kZ735qSk/belpBy4KzX14D1paQf/Su5VHGKwTA/W9+duM+i1jWC7
        /LlTi/ZHzx06sO+G6Bgwtxq4hUyhNsTxoc5676CoqPJe4eFlAezNbT5obGRj524sbMoFkyPyTEy9YIL3
        4JS6156/wSefdIrAOeWNw7p4DAWuT1BQzZ0WS/301NTGWVZr4+zMzIaXsrLqZNnZtS/ZbDUu1W65uVUv
        u+B3PS9q2WxVs222Sh4tM2WWGTk5lS/48Xw7eC4n5xgz04cZ7eiZszA9O9vD00ayso7ynjLpycxML0+Y
        NI3zd/Ko1Xp0akrKkUlxcQf7hYfv7YLrBlu3KmFjU0klbDh/O6oznVTO3zzrvtMETgkdrdNj/frGG8LD
        na9brW3zbLa2DyAvr+WD/PxmmJ+f75xfUND0YWFhIywoLGxYUFTk9mFRUb2suNjLfF5JSZ2RD4qL/Zp3
        Ft436b3CQr/+ZaSgQDa3qKjWlzmFhaa8a8I7RgoK3N5uB2/l5dW+Cfn5NUbeMOGfZyMvr+Yfubm1rxP8
        fM1mq33aaq2ZEBNztGdICM7blLCxqSRGNyVwCFudPFPDAIKLgSxogYHNsl89cCxsmsBdHRra8mle3qnv
        CgtPf1dcfPK7kpITsNhuP77E4WiTlZa2wtLS0pZlZGlZWTNvye7dznO1WE9ZmZGm7/z41qRvHA6/vmpn
        X5phtzd9AQ5Hoz+fG/jMhE/b2ScmLLLbGxeWlDR4wXKmpET2ERQVNTH/KShw/jMnp3Hw9u3KVXQ1bJ5v
        B2gHGaYDAjdcGjjwBem//82SA4cN0AvcqlUseM0UttbFRUVnlpWUnFlmt59ZYbefXm63n1rucJz63uE4
        uaK09AR8D2Vlx/+7e3ebW3l5q9A5fc8xWn426LEtWrS83azg7d7dyixnysragDr749/RAHB/QkKjHDb2
        +Uk2wIBe2ODjj53S0KG5lJMXyKPkboLAjSXDiKnA9SAXkYvJUKlr18ekBQuSaENqdAOHsDH090Xr1rW8
        kZp6ioWOwnZmhcNxGljo9ILHQ/hW/gbk0NNBkNFBge9dP7Ww3JSyMkMrfKHHGuGfn1/mXsf1HB6v51oH
        jPbFvUxtA5leW3VmbLu1qB3UOnPVHqvDl6zWZu68TQ2bUu/KVFIbuDlzmqS+fZMpJzPII+Quch0ZQ4YS
        ZAhZQqZ8Bq43GUCGkKukESOWSUuWHKUN8B04V+iwMQFr1zr7b9jgHBkc3Dxh+/bmKeHhzbdERTlvj45u
        ut1iabzVYmm4OSamfkpMTN1N5Mbo6LrJ0dG115FrIyNrJpIJkZHV48nYiIjq0eHh1VeGhVVdTkbu2CEb
        HhZWOQx27KgcStOCIWSQy0BySWjosUu2bTv2F3Kxy4CQkGP9t249Cv1I3y1bZH1I7+Bgt14uPcmFwcFH
        tHqY0J0JCvKrmwldgc41DGnW55+f3y5+P3oGBcn7yPYX+HYAtA2wtkK7AWvHAUDtytoY7Y22H0hwLHBc
        hv7yyzEcqxGuY3cFHccrw8Or6NhWTYiKqr6GTIqOrr7BYqm5KTa25maLpfa22NjaO3furL175866e+Pj
        6+7ftavuwcTE+keSkuofT06ufzIlBRfiGmampze8kJ7e+KLV2vhyRkbTa5mZTW9kZTW9lZ3tnGOzNb9H
        5uXmtsD75J2cnJZZaWnOh3btapwYHl7XPzi4pguuSPLnbUZTSVd9Sz/80Cxdc0015SOQTCcPkTvItWQ0
        QXaQIWTJK3C44ZeupDvpRfqRQWQUmURPHiJ99pnyJqD6BqCyAdrQsY3DOthodtVS2RHlEyjKDlbLQ7gy
        lCtvHTDK+3aCcP42bsSVR7W22NQRlPfalLCxoPkL2zffNEvjxzdQLjLIu+RJch+5hUwglxNkBxlClpAp
        ZAsZ8wgcEtiN9CSYe15CcPKHOemtUvfum6WpUxukFSvYxqgbwmPLlY1lH2j2Dp138DwDKAjtS60xPmjK
        +Zo6jVQGFBY2NXCrVjVL06c7pd69j1Ie8sl88gxh00l2/obMIDvIELKETLHRzSNwgKGPjXL9yUByGbmK
        3EReofO6OJpmHpIee6xBmjvXKSd++fJmaeXKFunHHzHKKRu3apWTNMl++gk7gRNQwNS0zgWjJnoXnCMq
        1q5FY6BRBKF9oKb4GkPdKerkelQo9bl6dSMNKk3St986pXnznNJTTzVKo0fXSAEBB6j+cVVyHXmNsLDh
        6uSNBBlBVpAZZIeNbvx00itw7FwOK7JzOTa1xBPeQO4k95NpBCeMr5I5ZAFZSD4ln5HPyZecrwShE2N1
        +gVZRFDP7xHU9tvkdfISmUmeIA8QZAGZQDaQEWSFnbsZho3dWOBY6NgFFMxFkdoRBFdgriFTCIZRBA+X
        RDGPfZY8T14k2LCXCcKI3oDBRgtCZ8PXKGoWtYsaRi2jplHbqHHUOmoetY8MIAvIBLKBjCAr2gslLHC6
        N5ZEFjqklJ3T4TLnYIInx5UYnCDiMihe+HaC9yGmEmzQg+Rhgg0EvDEoCJ0dq1fULmoYtYyaRm2jxlHr
        qHnUPjKALCATyAY7Z/M7svE3tgILHa6usNEOc9K+BEPmpQSXPkeSKwhOFscTbAgujU4i2DCcSGLIBcxz
        BaGzYnWKmkXtooZRy6hp1DZqHLWOmkftIwPIAjKBbLBRDZnhwwZ+b/zK2uDhnXO8ABKNIRQviqsyGFKR
        drzpB3i3HVdsAD0BYGMFobNh9cnqFbXL6hg1jdpGjaPWUfOofWQAWTivoGlv/IMBT8gCiMudGD7xghhK
        ARuBd9cZbBgPvYEgdDbaOuVrGDXN6hu1jppH7bOAaUMG533TPiGwF2MBZKMgg43SwsYKQmejV6t8LbP6
        5mteLxMdetN7QUH4sziHmyT9Pw4ffNJ2SGWRAAAAAElFTkSuQmCC
</value>
  </data>
</root>