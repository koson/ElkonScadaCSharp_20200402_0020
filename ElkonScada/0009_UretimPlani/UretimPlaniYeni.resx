<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ES386_1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="sirano.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="siparisno.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="firmaadi.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="santiyeadi.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="siparismiktari.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="receteadi.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="yapilanmiktar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="kalanmiktar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>